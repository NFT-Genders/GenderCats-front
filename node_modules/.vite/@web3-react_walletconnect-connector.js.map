{
  "version": 3,
  "sources": ["dep:@web3-react_walletconnect-connector", "../@web3-react/walletconnect-connector/src/index.ts"],
  "sourcesContent": ["\nexport * from \"./node_modules/@web3-react/walletconnect-connector/dist/walletconnect-connector.esm.js\"", "import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport { IWalletConnectProviderOptions } from '@walletconnect/types'\n\nexport const URI_AVAILABLE = 'URI_AVAILABLE'\n\nexport interface WalletConnectConnectorArguments extends IWalletConnectProviderOptions {\n  supportedChainIds?: number[]\n}\n\nexport class UserRejectedRequestError extends Error {\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    this.message = 'The user rejected the request.'\n  }\n}\n\nfunction getSupportedChains({ supportedChainIds, rpc }: WalletConnectConnectorArguments): number[] | undefined {\n  if (supportedChainIds) {\n    return supportedChainIds\n  }\n\n  return rpc ? Object.keys(rpc).map(k => Number(k)) : undefined\n}\n\nexport class WalletConnectConnector extends AbstractConnector {\n  private readonly config: WalletConnectConnectorArguments\n\n  public walletConnectProvider?: any\n\n  constructor(config: WalletConnectConnectorArguments) {\n    super({ supportedChainIds: getSupportedChains(config) })\n\n    this.config = config\n\n    this.handleChainChanged = this.handleChainChanged.bind(this)\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this)\n    this.handleDisconnect = this.handleDisconnect.bind(this)\n  }\n\n  private handleChainChanged(chainId: number | string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'chainChanged' event with payload\", chainId)\n    }\n    this.emitUpdate({ chainId })\n  }\n\n  private handleAccountsChanged(accounts: string[]): void {\n    if (__DEV__) {\n      console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n    }\n    this.emitUpdate({ account: accounts[0] })\n  }\n\n  private handleDisconnect(): void {\n    if (__DEV__) {\n      console.log(\"Handling 'disconnect' event\")\n    }\n    this.emitDeactivate()\n    // we have to do this because of a @walletconnect/web3-provider bug\n    if (this.walletConnectProvider) {\n      this.walletConnectProvider.stop()\n      this.walletConnectProvider.removeListener('chainChanged', this.handleChainChanged)\n      this.walletConnectProvider.removeListener('accountsChanged', this.handleAccountsChanged)\n      this.walletConnectProvider = undefined\n    }\n\n    this.emitDeactivate()\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!this.walletConnectProvider) {\n      const WalletConnectProvider = await import('@walletconnect/web3-provider').then(m => m?.default ?? m)\n      this.walletConnectProvider = new WalletConnectProvider(this.config)\n    }\n\n    // ensure that the uri is going to be available, and emit an event if there's a new uri\n    if (!this.walletConnectProvider.wc.connected) {\n      await this.walletConnectProvider.wc.createSession({\n        chainId: this.supportedChainIds && this.supportedChainIds.length > 0 ? this.supportedChainIds[0] : 1\n      })\n      this.emit(URI_AVAILABLE, this.walletConnectProvider.wc.uri)\n    }\n\n    const account = await this.walletConnectProvider\n      .enable()\n      .then((accounts: string[]): string => accounts[0])\n      .catch((error: Error): void => {\n        // TODO ideally this would be a better check\n        if (error.message === 'User closed modal') {\n          throw new UserRejectedRequestError()\n        }\n\n        throw error\n      })\n\n    this.walletConnectProvider.on('disconnect', this.handleDisconnect)\n    this.walletConnectProvider.on('chainChanged', this.handleChainChanged)\n    this.walletConnectProvider.on('accountsChanged', this.handleAccountsChanged)\n\n    return { provider: this.walletConnectProvider, account }\n  }\n\n  public async getProvider(): Promise<any> {\n    return this.walletConnectProvider\n  }\n\n  public async getChainId(): Promise<number | string> {\n    return this.walletConnectProvider.send('eth_chainId')\n  }\n\n  public async getAccount(): Promise<null | string> {\n    return this.walletConnectProvider.send('eth_accounts').then((accounts: string[]): string => accounts[0])\n  }\n\n  public deactivate() {\n    if (this.walletConnectProvider) {\n      this.walletConnectProvider.stop()\n      this.walletConnectProvider.removeListener('disconnect', this.handleDisconnect)\n      this.walletConnectProvider.removeListener('chainChanged', this.handleChainChanged)\n      this.walletConnectProvider.removeListener('accountsChanged', this.handleAccountsChanged)\n    }\n  }\n\n  public async close() {\n    await this.walletConnectProvider?.close()\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
