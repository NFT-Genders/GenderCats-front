{
  "version": 3,
  "sources": ["dep:@web3-react_walletlink-connector", "../@web3-react/walletlink-connector/src/index.ts"],
  "sourcesContent": ["\nexport * from \"./node_modules/@web3-react/walletlink-connector/dist/walletlink-connector.esm.js\"", "import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\n\nconst CHAIN_ID = 1\n\ninterface WalletLinkConnectorArguments {\n  url: string\n  appName: string\n  appLogoUrl?: string\n  darkMode?: boolean\n  supportedChainIds?: number[]\n}\n\nexport class WalletLinkConnector extends AbstractConnector {\n  private readonly url: string\n  private readonly appName: string\n  private readonly appLogoUrl?: string\n  private readonly darkMode: boolean\n\n  public walletLink: any\n  private provider: any\n\n  constructor({ url, appName, appLogoUrl, darkMode, supportedChainIds }: WalletLinkConnectorArguments) {\n    super({ supportedChainIds: supportedChainIds })\n\n    this.url = url\n    this.appName = appName\n    this.appLogoUrl = appLogoUrl\n    this.darkMode = darkMode || false\n\n    this.handleChainChanged = this.handleChainChanged.bind(this)\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this)\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    // @ts-ignore\n    if (window.ethereum && window.ethereum.isCoinbaseWallet === true) {\n      // user is in the dapp browser on Coinbase Wallet\n      this.provider = window.ethereum\n    } else if (!this.walletLink) {\n      const WalletLink = await import('walletlink').then(m => m?.default ?? m)\n      this.walletLink = new WalletLink({\n        appName: this.appName,\n        darkMode: this.darkMode,\n        ...(this.appLogoUrl ? { appLogoUrl: this.appLogoUrl } : {})\n      })\n      this.provider = this.walletLink.makeWeb3Provider(this.url, CHAIN_ID)\n    }\n\n    const accounts = await this.provider.request({\n      method: 'eth_requestAccounts'\n    })\n    const account = accounts[0]\n\n    this.provider.on('chainChanged', this.handleChainChanged)\n    this.provider.on('accountsChanged', this.handleAccountsChanged)\n\n    return { provider: this.provider, account: account }\n  }\n\n  public async getProvider(): Promise<any> {\n    return this.provider\n  }\n\n  public async getChainId(): Promise<number> {\n    return this.provider.chainId\n  }\n\n  public async getAccount(): Promise<null | string> {\n    const accounts = await this.provider.request({\n      method: 'eth_requestAccounts'\n    })\n    return accounts[0]\n  }\n\n  public deactivate() {\n    this.provider.removeListener('chainChanged', this.handleChainChanged)\n    this.provider.removeListener('accountsChanged', this.handleAccountsChanged)\n  }\n\n  public async close() {\n    this.provider.close()\n    this.emitDeactivate()\n  }\n\n  private handleChainChanged(chainId: number | string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'chainChanged' event with payload\", chainId)\n    }\n    this.emitUpdate({ chainId: chainId })\n  }\n\n  private handleAccountsChanged(accounts: string[]): void {\n    if (__DEV__) {\n      console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n    }\n    this.emitUpdate({ account: accounts[0] })\n  }\n}\n"],
  "mappings": ";;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGA,IAAM,WAAW;IAUJ,sBAAb,SAAA,oBAAA;AAAA,iBAAA,sBAAA;AASE,gCAAA,MAAA;;QAAc,MAAA,KAAA,KAAK,UAAA,KAAA,SAAS,aAAA,KAAA,YAAY,WAAA,KAAA,UAAU,oBAAA,KAAA;AAChD,YAAA,mBAAA,KAAA,MAAM;MAAE;UAAR;AAEA,UAAK,MAAM;AACX,UAAK,UAAU;AACf,UAAK,aAAa;AAClB,UAAK,WAAW,YAAY;AAE5B,UAAK,qBAAqB,MAAK,mBAAmB,KAAxB,uBAAA;AAC1B,UAAK,wBAAwB,MAAK,sBAAsB,KAA3B,uBAAA;;;AAlBjC,MAAA,SAAA,qBAAA;AAAA,SAqBe,WArBf,oBAAA;AAAA,QAAA;mBAyBM;;+BAWqB,OAAK,SAAS,QAAQ;UAC3C,QAAQ;YADa,KAAA,SAAjB,UAAA;AAGN,cAAM,UAAU,SAAS;AAEzB,iBAAK,SAAS,GAAG,gBAAgB,OAAK;AACtC,iBAAK,SAAS,GAAG,mBAAmB,OAAK;AAEzC,iBAAO;YAAE,UAAU,OAAK;YAAU;;;;;YArB9B,OAAO,YAAY,OAAO,SAAS,qBAAqB,MAAA;AAE1D,iBAAK,WAAW,OAAO;;;gBACd,CAAC,OAAK,YAAA;qCACU,OAAO,sBAAc,KAAK,SAAA,GAAC;AAAA,oBAAA;AAAA,uBAAA,cAAI,KAAJ,OAAA,SAAI,EAAC,eAAL,OAAA,aAAkB;kBAA7C,KAAA,SAAnB,YAAA;AACN,uBAAK,aAAa,IAAI,WAAJ,SAAA;kBAChB,SAAS,OAAK;kBACd,UAAU,OAAK;mBACX,OAAK,aAAa;kBAAE,YAAY,OAAK;oBAAe;AAE1D,uBAAK,WAAW,OAAK,WAAW,iBAAiB,OAAK,KAAK;;;;;;;;;;aAjCjE,GAAA;AAAA,aAAA,QAAA,OAAA;;;AAAA,SA+Ce,cA/Cf,uBAAA;AAAA,QAAA;mBAgDW;AAAP,aAAA,QAAA,QAAO,OAAK;aAhDhB,GAAA;AAAA,aAAA,QAAA,OAAA;;;AAAA,SAmDe,aAnDf,sBAAA;AAAA,QAAA;mBAoDW;AAAP,aAAA,QAAA,QAAO,OAAK,SAAS;aApDzB,GAAA;AAAA,aAAA,QAAA,OAAA;;;AAAA,SAuDe,aAvDf,sBAAA;AAAA,QAAA;mBAwD2B;6BAAA,OAAK,SAAS,QAAQ;QAC3C,QAAQ;UADa,KAAA,SAAjB,UAAA;AAGN,eAAO,SAAS;;aA3DpB,GAAA;AAAA,aAAA,QAAA,OAAA;;;AAAA,SA8DS,aAAA,sBAAA;AACL,SAAK,SAAS,eAAe,gBAAgB,KAAK;AAClD,SAAK,SAAS,eAAe,mBAAmB,KAAK;;AAhEzD,SAmEe,QAnEf,iBAAA;AAAA,QAAA;oBAoEI;AAAA,cAAK,SAAS;AACd,cAAK;;aArET,GAAA;AAAA,aAAA,QAAA,OAAA;;;AAAA,SAwEU,qBAAA,4BAAmB,SAAnB;AACN,QAAA,MAAa;AACX,cAAQ,IAAI,8CAA8C;;AAE5D,SAAK,WAAW;MAAE;;;AA5EtB,SA+EU,wBAAA,+BAAsB,UAAtB;AACN,QAAA,MAAa;AACX,cAAQ,IAAI,iDAAiD;;AAE/D,SAAK,WAAW;MAAE,SAAS,SAAS;;;AAnFxC,SAAA;EAAyC;",
  "names": []
}
